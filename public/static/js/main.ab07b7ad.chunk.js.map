{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/HomeComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/DishdetailComponent.js","components/AboutComponent.js","components/ContactComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","Card","to","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","key","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","RenderCard","item","in","transformProps","exitTransform","CardBody","designation","CardSubtitle","CardText","description","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","Header","toggleNav","bind","state","isNavOpen","isModalOpen","toggleModal","handleLogin","this","setState","event","alert","username","value","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","height","Collapse","isOpen","navbar","Nav","NavItem","Button","outline","Jumbotron","Modal","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","innerRef","input","check","color","Component","Footer","DishDetail","RenderDish","RenderComments","comments","postComment","dishId","cmnts","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","date","top","required","val","length","maxLength","len","CommentForm","handleSubmit","values","rating","Row","md","Col","select","model","defaultValue","text","placeholder","validators","minLength","show","messages","textarea","rows","About","leaders","RenderLeader","CardHeader","title","Media","list","tag","left","middle","object","body","heading","isNumber","isNaN","Number","validEmail","test","Contact","console","log","JSON","stringify","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","role","size","offset","checkbox","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addleaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newFeedback","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","catch","newComment","toISOString","addComment","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ab07b7ad.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};\t","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay,\r\n    CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n    function RenderMenuItem ({dish, onClick}) {\r\n        return (\r\n            <Card>\r\n                <Link to={`/menu/${dish.id}`} >\r\n                   <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardImgOverlay>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    const Menu = (props) => {\r\n\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\"  key={dish.id}>\r\n                    <RenderMenuItem dish={dish} />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\"> \r\n                        <div className=\"col-12\">\r\n                            <h4>{props.dishes.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>                \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {menu}\r\n                    </div>\r\n                </div>\r\n            );\r\n    }\r\n\r\nexport default Menu;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    if (isLoading) {\r\n        return(\r\n                <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n                <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else \r\n        return(\r\n             <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                    <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n\r\n    }\r\n\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess}  />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                 <RenderCard item={props.leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n      }\r\n\r\n      toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n      }\r\n\r\n      toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n\r\n      handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                            </NavItem>\r\n                            </Nav>\r\n\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                    <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, {Component} from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem,\r\n    Button, Modal, ModalHeader, ModalBody,\r\n    Row, Col, Label } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst  DishDetail = (props) => {\r\n\r\n        if (props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dish != null) \r\n\r\n        return (\r\n                <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderDish dish={props.dish} />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderComments comments={props.comments}\r\n                            postComment={props.postComment}\r\n                            dishId={props.dish.id}\r\n                          />\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            );\r\n        }\r\n        \r\n\r\nexport default DishDetail;\r\n\r\n\r\nfunction RenderComments({comments, postComment, dishId}) {\r\n        if (comments == null) {\r\n            return (<div></div>)\r\n        }\r\n        const cmnts = comments.map(comment => {\r\n            return (\r\n                <Stagger in>\r\n                <Fade in>\r\n                <li key={comment.id}>\r\n                    <p>{comment.comment}</p>\r\n                    <p>-- {comment.author},\r\n                    &nbsp;\r\n                    {new Intl.DateTimeFormat('en-US', {\r\n                            year: 'numeric',\r\n                            month: 'long',\r\n                            day: '2-digit'\r\n                        }).format(new Date(comment.date))}\r\n                    </p>\r\n                </li>\r\n                </Fade>\r\n                </Stagger>\r\n            )\r\n        })\r\n        return (\r\n            <div >\r\n                <h4> Comments </h4>\r\n                <ul className='list-unstyled'>\r\n                    {cmnts}\r\n                </ul>\r\n                <CommentForm dishId={dishId} postComment={postComment} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    function RenderDish({dish}) {\r\n        if (dish != null)\r\n            return(\r\n                <div>\r\n                <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n            <Card>\r\n                <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n            </FadeTransform>\r\n                </div>\r\n            );\r\n        else\r\n            return(\r\n                <div></div>\r\n            );\r\n    }\r\n\r\n\r\n    const required = (val) => val && val.length;\r\n    const maxLength = (len) => (val) => !(val) || (val.length <= len);\r\n    const minLength = (len) => (val) => val && (val.length >= len);\r\n\r\n    class CommentForm extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n        // console.log('Current State is: ' + JSON.stringify(values));\r\n        // alert('Current State is: ' + JSON.stringify(values));\r\n        // event.preventDefault();\r\n    };\r\n\r\n    \r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n            <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span> Add Comment</Button>\r\n            \r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                    <div className=\"col-12\">\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={12}>Rating</Label>\r\n                                <Col md={12}>\r\n                                <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\r\n                                        defaultValue=\"1\" className=\"form-control\">\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                        <option value=\"4\">4</option>\r\n                                        <option value=\"5\">5</option>\r\n                                    </Control.select>\r\n                                    </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" md={12}>Your Name</Label>\r\n                                <Col md={12}>\r\n                                <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        placeholder=\"Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".name\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={12}>Comment</Label>\r\n                                <Col md={12}>    \r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                            <Col md={12}>  \r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                            </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                        </div>\r\n                    </ModalBody>\r\n                </Modal>\r\n\r\n            </div>)\r\n    }\r\n\r\n    }","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.map((leader) => {\r\n        return (\r\n            <RenderLeader key={leader.id} leader={leader} />\r\n        );\r\n    });\r\n\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        {leaders}\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    \r\n\r\n\r\nfunction RenderLeader({leader}){\r\n        return (\r\n            <div key={leader.id} className=\"col-12 mt-5\">\r\n            <Stagger in>\r\n                <Fade in>\r\n                <Media tag=\"li\">\r\n                  <Media left middle>\r\n                      <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                  </Media>\r\n                  <Media body className=\"ml-5\">\r\n                    <Media heading>{leader.name}</Media>\r\n                    <Media heading><small>{leader.designation}</small></Media>\r\n                    <p>{leader.description}</p>\r\n                  </Media>\r\n                </Media>\r\n                </Fade>\r\n                </Stagger>\r\n              </div>\r\n        );\r\n}","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n            Button, Row, Col, Label } from 'reactstrap';\r\nimport { Control, Form, Errors} from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n  constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        }\r\n    \r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.postFeedback(values.firstname,values.lastname,values.telnum,values.email,values.agree,values.contactType,values.message)\r\n        this.props.resetFeedbackForm();\r\n        // event.preventDefault();\r\n    }\r\n\r\n  render() {\r\n    \r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>Contact Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                <h3>Location Information</h3>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                    <h5>Map of our Location</h5>\r\n                </div>\r\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                        <button className=\"btn btn-info\" ><i className=\"fa fa-skype\"></i> Skype</button>\r\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                             <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n               </div>\r\n        </div>\r\n    );\r\n    }\r\n\r\n}\r\n\r\nexport default Contact;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    \r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addleaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addleaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\nexport const postFeedback = (firstname, lastname,telnum,email, agree, contactType,message) => (dispatch) => {\r\n    \r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message:message\r\n    };\r\n    // newFeedback.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'feedback', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => {\r\n      alert(\"Thank you for your feedback!\" + JSON.stringify(response));\r\n      console.log(\"Thank you for your feedback!\" + JSON.stringify(response))\r\n    })\r\n    .catch(error =>  { console.log('post feedback', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};","export const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\n\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\n\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\n\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\n","import React, { Component } from 'react';\r\nimport Menu from './MenuComponent';\r\nimport Home from './HomeComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport DishDetail from './DishdetailComponent'\r\nimport About from './AboutComponent'\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport Contact from './ContactComponent';\r\nimport { postFeedback,postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  postFeedback: (firstname, lastname,telnum,email, agree, contactType,message) => dispatch(postFeedback(firstname, lastname,telnum,email, agree, contactType,message)),\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders())\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n    console.log(\"leaders:\" + this.props.leaders.leaders);\r\n  }\r\n\r\n    render() {\r\n\r\n    const HomePage = () => {\r\n      return(\r\n          <Home \r\n              dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n              dishesLoading={this.props.dishes.isLoading}\r\n              dishErrMess={this.props.dishes.errMess}\r\n              promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n              promoLoading={this.props.promotions.isLoading}\r\n              promoErrMess={this.props.promotions.errMess}\r\n              leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n              leaderLoading={this.props.leaders.isLoading}\r\n              leaderErrMess={this.props.leaders.errMess}\r\n          />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n          <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n            isLoading={this.props.dishes.isLoading}\r\n            errMess={this.props.dishes.errMess}\r\n            comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n            commentsErrMess={this.props.comments.errMess}\r\n            postComment={this.props.postComment}\r\n          />\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div>\r\n          <TransitionGroup>\r\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n              <Switch location={this.props.location}>\r\n                  <Route path='/home' component={HomePage} />\r\n                  <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders.leaders}\r\n                    leaderLoading={this.props.leaders.isLoading} leaderErrMess={this.props.leaders.errMess} />} />} />\r\n                  <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                  <Route path='/menu/:dishId' component={DishWithId} />\r\n                  <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} \r\n                       postFeedback={this.props.postFeedback} /> } />\r\n                  <Redirect to=\"/home\" />\r\n              </Switch>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        leaders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n        return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React,{Component} from 'react';\nimport './App.css';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n} \nexport default App;\n","import {createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport { InitialFeedback } from './forms';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk,logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport  'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}